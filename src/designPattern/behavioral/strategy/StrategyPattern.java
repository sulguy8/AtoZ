package designPattern.behavioral.strategy;
// 동일한 계열의 알고리즘들을 개별적으로 캡슐화하여 상호 교환할 수 있게 정의하는 패턴.
// 클라이언트는 독립적으로 원하는 알고리즘을 선택하여 사용할 수 있으며, 클라이언트에 영향없이 알고리즘의 변경이 가능하다.
public class StrategyPattern {
// 여러 알고리즘을 하나의 추상적인 접근점(인터페이스)을 만들어 접근점에서 서로 교환 가능하도록 하는 패턴.
// 클라이언트가 전략을 선택하면 다양한 전략이 준비되어있을때 선택할 수 있음.
}
