for(int i=1;i<=10;i++){
	var rNum = Math.random(); // 기본값 더블. 0~1까지 나옴
		document.write(rNum);
	}

for(var i=1;i<=10;i++){
	var rNum = Math.random();
		rNum = Math.floor(rNum*16)+1;
		document.write(rNum + '<br>');
	} // 16까지 난수 뽑는방법

<body>
	<div id="rDiv"></div>
	<button onclick="startGame()">게임시작</button>
	<script>
		var rDiv = document.getElementById('rDiv');
		function startGame() {
			var html = '<table border="1">';
			var n = 1;
			for (var i = 1; i <= 4; i++) {
				html += '<tr>';
				for (var j = 1; j <= 4; j++) {
					html += '<td>' + (n++) + '</td>';
				}
				html += '</tr>';
			}
			html += '</table>'
			rDiv.innerHTML = html;
		}
	</script>
</body>

자바에서 데이터타입 어기면 실행안됨. 컴파일도 안됨. 오버로딩때문에
하지만 스크립트는 조건 하나만 맞아도 실행됨. 따라서 오버로딩이 없음. 마지막에 선언된것이 짱이됨. 따라서 파라미터에 아무것도 쓰지 않음.
		function clickBtn(btnNum){
			alert(btnNum);
		}

# null undefined 다른것

# String sql = var html


## 지뢰찾기 완성본!
<body>
	<div id="rDiv"></div>
	<button onclick="startGame()">게임시작</button>
	<script>
		var rDiv = document.getElementById('rDiv');
		var rNum;
		
		function startGame() {
			rNum = Math.floor(Math.random()*16) + 1;
			var html = '<table border="1">';
			var n = 1;
			for (var i = 1; i <= 4; i++) {
				html += '<tr>';
				for (var j = 1; j <= 4; j++) {
					html += '<td><button onclick="clickBtn('+ (n++) +')">난 지뢰 아님</button></td>';
				}
				html += '</tr>';
			}
			html += '</table>' // 여기까지는 단순한 String
			rDiv.innerHTML = html; // 여기서부터 브라우저의 메모리에 올라감! 여기서부터 onclick작동		
		}
		function clickBtn(btnNum){
			if(btnNum==rNum){
				alert('사실 난 지뢰였음!');	
			}
		}
		
	</script>
</body>

DOM구조 = 피라미드 구조(ex 태그의 영역)


## 지뢰찾기 완성본2! (this를 이용해서 못찾으면 알려줌) // 순수하게 화면의 영역임. 서버꺼도 작동가능하다. 따라서 동적자원이라고는 하지 않음.
<body>
	<div id="rDiv"></div>
	<button onclick="startGame()">게임시작</button>
	<script>
		var rDiv = document.getElementById('rDiv');
		var rNum;
		
		function startGame() {
			rNum = Math.floor(Math.random()*16) + 1;
			var html = '<table border="1">';
			var n = 1;
			for (var i = 1; i <= 4; i++) {
				html += '<tr>';
				for (var j = 1; j <= 4; j++) {
					html += '<td><button onclick="clickBtn(this,'+ (n++) +')">난 지뢰 아님</button></td>';
				}
				html += '</tr>';
			}
			html += '</table>' // 여기까지는 단순한 String
			rDiv.innerHTML = html; // 여기서부터 브라우저의 메모리에 올라감! 여기서부터 onclick작동		
		}
		function clickBtn(btnObj, btnNum){
			if(btnNum==rNum){
				alert('사실 난 지뢰였음!');	
			} else {
				btnObj.parentNode.innerHTML = '지뢰 아님';
			}
		}
		
	</script>
</body>


## 카드놀이
<body>
	<div id = "rDiv1"></div>
	<div id = "rDiv2"></div>
<script>
	var arr1 = [];
	var arr2 = [];
	while(arr1.length!=10){
		var rNum = Math.floor(Math.random()*10)+1;
		if(arr1.indexOf(rNum)==-1){
			arr1.push(rNum);
		}
	}
	
	
	while(arr2.length!=10){
		var rNum = Math.floor(Math.random()*10)+1;
		if(arr2.indexOf(rNum)==-1){
			arr2.push(rNum);
		}
	}
	var html1 = '<table border="1"><tr>';
	var html2 = '<table border="1"><tr>';
	
	for(var i=0; i<arr1.length;i++){
		html1+='<td onclick="checkCard(this,' + arr1[i] + ')">#</td>';
		html2+='<td onclick="checkCard(this,' + arr2[i] + ')">#</td>';
			
	}	
	
	html1 += '</tr></table>';
	html2 += '</tr></table>';
	document.getElementById('rDiv1').innerHTML = html1;
	document.getElementById('rDiv2').innerHTML = html2;
	
	function checkCard(tdObj, num){
		tdObj.innerHTML = num;
	}
	
	
</script>
</body>




