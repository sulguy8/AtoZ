* 우리도 자바처럼 일반 스트링을 의미있는 것으로 정의할 수 있다!(reflection)

* Method[] methods = clazz.getMethods();

  Method[] methods = clazz.getDeclaredMethods(); // 2개의 차이는 아랫것은 자기가 갖고있는것만 보여주고 위에것은 상속받는 전부 보여줌.

* invoke : 프로그래밍에서 해당메소드를 실행한다라고 이해하면 쉽다.

* method.invoke(h, 20);// h로 실행하긴 할건데 뭘로 할거냐고? 20!

* reflection의 목적은 내가 모르는 임의의 의미있는 class의 메소드나 변수들을 알아보고 바로바로 씀에 있다.

* Reflection으로 생성된 메모리는 일반적으로 new로 생성하는 것과 달리("h1==h2" false!) 같은 메모리를 재사용한다.("h1==h2" true!) 한번 만들어졌다면 계속 사용한다.
** "싱글톤" 패턴이라고 함.


* 보통 Java 문법은 S(주어:object) V(동사:method) O(목적어:argument) 순서이지만, reflection 은 V.invoke(S,O) 순이라고 보면된다. 

MyClass myClass = new MyClass("kaspyx")
String myName = myClass.getMyName();

	** 이렇게 바뀜 **

Class myClass = Class.forName("MyClass");
Constructor myConstuctor = myClass.getConstructor( new Class[] {String.class });
Object myObj = myConstuctor.newInstance("kaspyx");
Method method = myClass.getMethod("getMyName");
String myName = (String)method.invoke(myObj);