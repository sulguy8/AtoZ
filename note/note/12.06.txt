* root는 home폴더가 root지만 

* 깃에 연동하는 방법
1. git init + url로 bean처럼 등록하기

2. git clone으로 덮어 씌우기

* 리눅스에서 환경변수 설정안해도 open jdk가 알아서 해줌. (윈도우는 알아서 안해줘서 내가해야 함.)

jLeKZ0mjAYEFUzSroT6s
Ll6E5Ql3TY

* HttpURLConnection hc = (HttpURLConnection)url.openConnection(); // 여기서 연결

* client.id=jLeKZ0mjAYEFUzSroT6s // 프로퍼티의 키 이름은 소문자, 띄어쓰기는 .으로

* servlet-context.xml
** <beans:property name="location" value="classpath:/conf.properties"/> 이게 예전에 inputstream으로 파일위치 땡겨오는 것

* class의 static은 따로 메모리생성안해도 처음에 컴파일할때 전부다 읽어들임.

* ioc = 리모컨, di = tv의 켜기위한 코드

* Class.forName(className) // className이어떻게 구성되는지 ,변수 ,메소드, 뭘상속받는지의 정보를 갖고있음


* readLine쓸 때 while문을 쓰면 더 간단하게 (for문은 끝이있는 것)
입력값
System.out.println(br.readLine());
System.out.println(br.readLine());
System.out.println(br.readLine());

값
client.id=1234=4
client.secret=asdasdyu
null

* 이 역할을 Properties prop =new Properties());
prop.load(fis);가 맵까지 전부 알아서 만들어 줌

//			String str1 = br.readLine();
//			String str2 = br.readLine();
//			
//			String rstKey1= str1.substring(0,str1.indexOf("="));
//			String rstValue1 = str1.substring(str1.indexOf("=")+1);
//			
//			String rstKey2= str2.substring(0,str2.indexOf("="));
//			String rstValue2 = str2.substring(str2.indexOf("=")+1);
//
//			
//			Map<String,String> rMap = new HashMap<String,String>();
//			rMap.put(rstKey1, rstValue1);
//			rMap.put(rstKey2, rstValue2);
//			
//			System.out.println(rMap); 

* application properties에 "키=밸류" 로 저장하게되면 스프링이 처음에 전부다 읽는다.

* 프로퍼티즈들은 "키,밸류" 구조, xml은 "node"구조 따라서 목적에 따라서 사용법이 구분되는 구조의 차이임

* 이렇게 사용 안함
			String res = "";
			String str = null;
			while((str=br.readLine())!=null) {
				res += str;
			}
** 훨씬 빠름 
			StringBuffer res = new StringBuffer();
			String str = null;
			while((str=br.readLine())!=null) {
				res.append(str);
			}

* @JsonIgnoreProperties(ignoreUnknown = true) // Json이 모르는 것들 전부 무시하는 어노테이션

* private ObjectMapper // Gson이랑 좀비슷