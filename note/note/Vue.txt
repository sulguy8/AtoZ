https://blog.naver.com/bkcaller/221456846541

검색엔진에 노출시킬수있는 서버렌더링
프론트에서 사용할수 있는 데이터를 효율적으로 사용

1. 중앙에 위치하도록 간단한 디자인을 해주고
2. 할일을 입력하는 텍스트박스를 하나 만든뒤
3. 입력값을 new.todo라는 변수에 바인딩해주고
4. 엔터키가입력됐을 경우 메세지를 호출해서
5. todoList에 값을 추가하고
6. 추가한 값들을 바로 화면에 출력합니다.
7. 추가한 한일 목록들은 Todo라는 컴포넌트에 추가를해서
8. 만약에 완료했을경우 success라는 클래스에 추가해줌

vue.js는 html에서 발생하는 각종 이벤트들을 자바스크립트에 연결하고 자바스크립트의 변경사항을 바로 html에 적용시킨다
컴포넌트화를 통해 유지보수가 편함

<script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>

Youtube : https://www.youtube.com/watch?v=kYo6FXCVjAI&list=PLwawSyI26pfuGsEzp7AzP_TJVhSdwFuwh&index=2

# 1 Vue.js로 Todo 어플리케이션 만들기 - data binding과 Vue devtools
* 크롬에서 vue 웹어플리케이션 다운받기
<body>
    <div id="app">
        <input type="text" id="user_id" v-model="userId">
        <input type="password" id="user_password" v-model="userPassword">
        <button type="button">로그인</button>
        <br />
        아이디 : {{ userId }}
        <br />
        비밀번호 : {{ userPassword }}
    </div>				// 화면을 구성한다. 백엔드의 View와 같다
<script>
    new Vue({				// 인스턴스를 만들어야 함.
        el: '#app',
        data() {				// view의 v-model에 맵핑
            return{
                userId: '',
                userPassword:''
            }
        }
    })					// 화면구성에 필요한 값들. 백엔드의 Model와 같다. MVC패턴과 비슷
</script>
    
</body>

# 2 Vue.js로 Todo 어플리케이션 만들기 - list 출력하기
* Vue.js에서 리스트를 출력하려면 반복할 태그에 v-for라는 attribute를 사용하고 
  두개 이상의 태그를 반복문 안에 사용하려면 templet이라는 태그를 사용해야함. vue.js는 데이터 변경사항을 감지해서 자동으로 업데이트 해줌.
  태그 안에서는 <img :src="item.image">
  태그 밖에서는 {{ item.title }}
