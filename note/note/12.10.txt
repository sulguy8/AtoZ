	@Override
	public int updatePapagoInfoCnt(PapagoInfoVO user) {
		SqlSession ss = ssf.openSession();
		try {
			return ss.update("com.ys.papago.PapagoInfoMapper.updatePapagoInfoForCnt", user);
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			ss.commit();
			ss.close();

		}
	}

* 지금까지 JDBC(ojdbc6.jar)를 안깔아줬던 이유는 ext 폴더에 넣어놔서. license때문에 maven 사용못함. 
  spring jdbc는 jdbc기반으로 동작하기 때문에 둘다 있어야함.

* properties 파일은 jsp, servlet뿐만 아니라 xml에서도 사용이 가능하다.

* 같은 이벤트를 여러번 실행하고 싶을때?
$(document).ready(function(){
	$('button').on('click',function()){
		alert(this.innerText); // 해당 이벤트를 눌렀을때 그 값(this)로 해라. ex) 5개의 버튼중에3번누르면 3이뜸. Jquery의 장점
		var param = {
			uiId : $('#uiId').val(),
			uiPwd : $('#uiPwd').val()
	}
	param = JSON.stringify(param);
	alert(param);
	})
})

* <beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"> // resolver 덕분에 Controller로 타는 것은 아랫것들이 적용됨. (그래서 페이지 이동이 아닌 것은 RestController쓰는 것)
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
** 하지만 @GetMapping("/test)해서 그 메소드 앞에 @ResponseBody를 쓰면 @Controller라도 페이지로 이동하지 않음(/WEB-INF/views/랑 .jsp붙지않음)

** 화면은 화면대로, 이벤트는 이벤트대로

* xml에서 eltag사용하고싶다면?
** servlet-context.xml 설정 
	<beans:bean class= "org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<beans:property name="location" value="classpath:/conf.properties"/>
** conf.properties
client.id=jLeKZ0mjAYEFUzSroT6s
client.secret=Ll6E5Ql3TY
client.api.url=https://openapi.naver.com/v1/papago/n2mt
driver.class.name=oracle.jdbc.driver.OracleDriver
** root-context.xml
	<bean id="bds" class="org.apache.commons.dbcp.BasicDataSource" destroy-method ="close">
		<property name="driverClassName" value="${driver.class.name}"/>  // 요렇게
		<property name="url" value="jdbc:oracle:thin:@localhost:1521:xe"></property>
		<property name="username" value="bdi"/>
		<property name="password" value="12345678"/>
		<property name="defaultAutoCommit" value="false"/>
	</bean>	

* httpsession을 사용하는 곳은 tdd안함. 따라서 service에서 안하고 dao에서 하는거임