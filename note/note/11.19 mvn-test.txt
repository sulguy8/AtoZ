1. index.jsp, ViewsController �����
2. Controller, serivce, dao, vo ä���
3. config��Ű�� ä���(mybatis-config.xml, mapper/mapper.xml)
4. filter ����� ���⼭ css,js������ ���ϰ� ���� �� �ִ�! / "web.xml"�� ���� �߰�
5. InitServlet �����
6. �� ���� ä���


int uiNum = Integer.parseInt(request.getParameter("uiNum"));
UserInfoVO user = new UserInfoVO();
user.setUiNum(uiNum);


1. loadOnStartup, filter ������ �޸𸮸� ���� ����� �״����� ���͸� ���ļ� servlet�� �ѱ��� �˾Ƹ��� �� �ֵ��� "request"�� �ѱ�ȭ�ȴ�.

2. InitServlet���� loadOnStartup�� ���İ��� static ������ Ȱ��ȭ�� �Ǹ鼭
	static {
		String path = "/config/mybatis-config.xml";
		InputStream is = UserInfoDAOImpl.class.getResourceAsStream(path);
		ssf = new SqlSessionFactoryBuilder().build(is);	
	} �̰ɷ� �Ѱ��� ��(����Ŭ)�� �ϴ� ������ ���� �͸� ��������.

##### ���⼭ "ssf"������ ������? #####
String path�� "/config/mybatis-config.xml";�޾ƿ��� �Ǵµ�!
<configuration>
  <environments default="development">
    <environment id="development">
      <transactionManager type="JDBC"/>
      <dataSource type="POOLED">
        <property name="driver" value="oracle.jdbc.driver.OracleDriver"/>
        <property name="url" value="jdbc:oracle:thin:@localhost:1521:xe"/>
        <property name="username" value="bdi"/>
        <property name="password" value="12345678"/>
      </dataSource>
    </environment>
  </environments>

  <mappers>
    <mapper resource="/config/mapper/userInfo.xml"/>
  </mappers>

</configuration> // "DB�� ����"�ϴ� ���Ұ� ���Ҿ� "������"�� ������ mappers�� �������� ���⼭ �Ѵ�.

3. UserController�� �����ؼ� List<UserInfoVO> uiList = uis.getUserList(null)
	UserInfoVO�� GetaSeta�޼ҵ�� 
	@Data // ��Ÿ��Ÿ �޼ҵ� ���� ����� ��ɾ�. �̰Ծ����� �Ʒ� �������� ���� ������� ����.
	public class UserInfoVO {
		private Integer uiNum;
		private String uiName;
		private String uiId;
		private String uiPwd;
		private String credat;
		private String cretim;
		private String moddat;
		private String modtim;
		private String active;
	} // �̷������� �����Ǿ�����.

    Map<String,String> istMap = gson.fromJson(json, Map.class); // ���⼭  VO�� JSON�� "Key"�� ���ؼ� "Key value"�� ���Խ�Ŵ // ���� ���� "Key"�̸��� ��ġ�� ������ ������ �ȵ�!

4. List<UserInfoVO> getUserList(Map<String, String> pUser) 	// ���񽺸� ��ġ��

5. private SqlSessionFactory ssf;				// �Ѱ��� ��(����Ŭ)�� �ϴ� ������ ���� ���´�!
   public List<UserInfoVO> selectUserList(Map<String, String> pUser)  // DAO�� ����! 	
	SqlSession ss = InitServlet.getSqlSession(); 		// InitServlet�� public static SqlSession getSqlSession()�� ���ϰ��� ������. �� �������� DB����.
   return ss.selectList("UserInfo.selectUserList",pUser); 		// ���⼭ �������� �����Ŵ! �̰��� userInfo.xml�� ����. 

##### ���� �츮�� �޴� ���ϰ���? #####
List<UserInfoVO> uiList = ss.selectList.selectList("UserInfo.selectUserList",pUser);

���! �츮�� ��������� �޴� ����Ʈ�� userInfo.xml�� �������� ����� ������ DB ����Ʈ���� Map<String, String> pUser �����̴�.

6. UserController�� List<UserInfoVO> uiList = uis.getUserList(null);�� �ϼ��ǰ� �̰��� JSON���·� JSP�� ������.
   response.setContentType("application/json;charset=utf-8"); �̰��� �������� �˾Ƶ��� �� �ֵ��� utf-8���·� �ٲپ ������.	

============================================================================================================================================

* post�� �����͸� ������ parameter�� �����ʴ´�. ����! JSon���·� payload(����)���·� ��������.
BufferedReader br = request.getReader();
		String str = null;
		String json = "";
		while((str=br.readLine())!=null) {
			json +=str;
		}


* @WebServlet(name = "ViewsServlet", urlPatterns = {"/views/*"},loadOnStartup = 2)

* document.querySelector('#uiName').value;