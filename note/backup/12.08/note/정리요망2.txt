* 흐름을 읽고 근거를 갖고 행동하는 것.

* mvc 패턴 2 가 board 프로젝트에서 하던방식
* 순수 html로도 가능하긴한데. 브라우저가 가만히 있는 상태에서 xhr이 갔다오는형태 
* mvn-test는 json형태로 response.getWriter~~ 로  뿌려주는 형태 저것을 parsing해서 html로 만들어주는 작업.
* file은 ajax를 이용해서 form태그를 이용했었음.
* OOP : 객체지향 프로그램or 프로그래밍
* 프로젝트가 롬복을 바라봐도 롬복을 설치해야한다.
* 클래스의 시작은 패키지이다.


* 만약에 메이븐 에러가 많이 뜬다면? 카페같이 여러명이 공유하는 것.
1. 아파치 메이븐을 설치한다.
2. 로컬디파짓토리에 강제로 다운받게한다.

* private static final Logger logger 와 System.out.println 과의 차이점.
logger.info("hello", locale); // info : 찍히고 경로까지 다나옴. syso보다 경제적임. {} 여기에 locale이 들어감.

* private static final Logger logger = LoggerFactory.getLogger(HomeController.class); // 클래스마다 logger쓰려면 선언해줘야함.
  lombok을 이용해서 @Slf4j를 선언하면 위에것을 대신할 수 있다.

String str ="나는";
String naem = "홍길동";
logger.info("{} {}입니다", str, name); // 나는 홍길동 입니다.

System.out.println("hello", locale); // 이제 왠만하면 안쓰는게 나음.

