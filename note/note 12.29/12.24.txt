* 페이징
2개가 실행도니는곳이 다름. 자바개발자라면 오라클의 프로시져는 할 줄 알아야함. 오라클에서 plsql이라고 부름
** 프로시져 : 리턴타입없어도 됨. 0 개이상, 1일수도있고 2개이상일수도있구 // 속도가 빨라서 금융권같은데서 아주 많이씀. 데이터 서버에서 실행됨. 많이 만들어도 상관없지만 많이 호출되면 부담스러움.
** function : 은 1개의 리턴타입이 존재해야함.


CREATE table test_info(
ti_num INT(11) UNSIGNED AUTO_INCREMENT PRIMARY KEY,
ti_name VARCHAR(100) NOT NULL,
ti_age VARCHAR(200) NOT NULL,
ti_etc VARCHAR(1000)
);


http://localhost/tests?page.page=20


DELETE FROM test_info
WHERE ti_num BETWEEN 980 AND 989; // ~이상 ~~ 이하


delimiter 
$$

CREATE PROCEDURE proc_insert_test_info()
BEGIN
INSERT INTO test_info(ti_name, ti_addr, ti_etc)
VALUES('hong','seoul','bigo');
END

$$
delimiter ;  // $$ 사이의 문장의 ;무시하고 한문장으로 본다



delimiter 
$$

CREATE OR replace PROCEDURE proc_insert_test_info()
BEGIN
#INSERT INTO test_info(ti_name, ti_addr, ti_etc)
#VALUES('hong','seoul','bigo');
DECLARE i INT DEFAULT 1;

ex_for: loop
	SET i = i+1;
	SELECT i;

	if i=10 then
	leave ex_for;
	END if;

END loop ex_for;
END
$$
delimiter ;


CALL proc_insert_test_info();

LIMIT 20, 10; // 1부터 시작
for (int i=0 ; i<10; i--){
	if(page/i
}



res.page.page  	/	변수
1		/	-0
2		/	-1
.
.
.
10		/	-9

11		/	-0
12		/	-1
.
.
.
20		/	-9

21		/	-0
22		/	-1		



////
1-0 = 1
2-1 = 1
3-2 = 1


////
11-0 = 11
12-1 = 11
13-2 = 11
14-3 = 11

///

21-0 = 21
22-1 = 21
23-2 = 21
24-3 = 21












var rowCount =10;

function goPage(page){
	$.ajax({
		url:'/tests',
		method:'GET',
	 	data:'page.page=' + page, 
		success:function(res){
			console.log(res);
			var html = '';
			for(var list of res.list){
				html += '<tr>'
				html += '<td>' + list.tiNum +'</td>';
				html += '<td>' + list.tiName +'</td>';
				html += '<td>' + list.tiAddr +'</td>';
				html += '<td>' + list.tiEtc +'</td>';
				html += '</tr>'
			}
			document.querySelector('#tbody').innerHTML = html;
			var totalPage = Math.ceil(res.page.totalCount/rowCount);
			var sPage = Math.floor((res.page.page-1)/10)*10 + 1;
			var ePage = sPage + 9;
			if(ePage>totalPage){
				ePage = totalPage;
			}
			var html = '';
			for(var i=sPage; i<=ePage; i++){
				html += '<a data-page="' + i + '"> [' + i + ']';
			}
			$('#pagination').html(html);
			setEvent();
		}
	})	
}

function setEvent(){
	$('a[data-page]').on('click',function(){
		alert(this.getAttribute('data-page'));
		goPage(sURLVariables); 
	})
}
